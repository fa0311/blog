---
import twemoji from "@twemoji/api";
import Path from "path";
import "zenn-content-css";
import Article from "../../components/Article.astro";
import Layout from "../../layouts/Layout.astro";
import { getArticleList, markdownToHtmlNormalized } from "../../lib/zenn";

export const getStaticPaths = async () => {
  const articles = await getArticleList();
  const types = articles.flatMap((article) => article.frontmatter.type ?? []);
  const topics = articles.flatMap((article) => article.frontmatter.topics ?? []);
  return [...new Set([...topics, ...types])].map((topic) => {
    const data = articles.filter((article) => {
      const articleTopics = article.frontmatter.topics ?? [];
      return articleTopics.includes(topic) || article.frontmatter.type === topic;
    });

    return {
      params: { topic },
      props: {
        emoji: "#âƒ£",
        data: data.map((article) => {
          const html = markdownToHtmlNormalized(article.rawContent());
          return {
            slug: Path.basename(article.file, ".md"),
            topics: article.frontmatter.topics,
            title: article.frontmatter.title,
            emoji: article.frontmatter.emoji,
            type: article.frontmatter.type,
          };
        }),
      },
    };
  });
};

const { topic } = Astro.params;
const { data, emoji } = Astro.props;
---

<Layout>
  <header>
    {
      emoji && (
        <div
          class="header-emoji"
          set:html={twemoji.parse(emoji!, { folder: "svg", ext: ".svg" })}
        />
      )
    }

    <h1>
      {topic}
    </h1>
  </header>
  <main>
    <section>
      <h2>Articles</h2>
      <div class="article-list">
        {
          data.map(({ title, emoji, slug }) => (
            <Article title={title ?? ""} emoji={emoji} slug={slug} />
          ))
        }
      </div>
    </section>
  </main>

  <style>
    .article-list {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      align-items: flex-start;
      justify-content: space-between;
    }

    header {
      display: flex;
      flex-direction: row;
      background-color: #ffffff;
    }

    .header-emoji {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      overflow: hidden;
      margin-right: 1.7rem;

      border: 1px solid #e4edf4;
    }
  </style>
</Layout>
